package MusicTheoryLang.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.core.aspects.behaviour.SMethodBuilder;
import jetbrains.mps.core.aspects.behaviour.SJavaCompoundTypeImpl;
import jetbrains.mps.core.aspects.behaviour.AccessPrivileges;
import org.jetbrains.mps.openapi.language.SEnumerationLiteral;
import java.util.List;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SEnumOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import org.jetbrains.mps.openapi.language.SProperty;

public final class MajorScale__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757d6b824L, "MusicTheoryLang.structure.MajorScale");

  public static final SMethod<SNode> withTonic_id7K_nJtnRyj0 = new SMethodBuilder<SNode>(new SJavaCompoundTypeImpl((Class<SNode>) ((Class) Object.class))).name("withTonic").modifiers(1, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(8945660651265467584L).languageId(0x852f1bd942b093e8L, 0x87d1018d30c44219L).build2(SMethodBuilder.createJavaParameter((Class<SEnumerationLiteral>) ((Class) Object.class), ""));
  public static final SMethod<SEnumerationLiteral> degree_id7K_nJtnPFxg = new SMethodBuilder<SEnumerationLiteral>(new SJavaCompoundTypeImpl((Class<SEnumerationLiteral>) ((Class) Object.class))).name("degree").modifiers(8, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(8945660651264981072L).languageId(0x852f1bd942b093e8L, 0x87d1018d30c44219L).build2(SMethodBuilder.createJavaParameter(Integer.TYPE, ""));
  public static final SMethod<SEnumerationLiteral> nextSemitone_id7K_nJtnQ1dq = new SMethodBuilder<SEnumerationLiteral>(new SJavaCompoundTypeImpl((Class<SEnumerationLiteral>) ((Class) Object.class))).name("nextSemitone").modifiers(1, AccessPrivileges.PUBLIC).concept(CONCEPT).baseMethodId(8945660651265069914L).languageId(0x852f1bd942b093e8L, 0x87d1018d30c44219L).build2(SMethodBuilder.createJavaParameter((Class<SEnumerationLiteral>) ((Class) Object.class), ""));
  /*package*/ static final SMethod<Integer> semitonesForDegree_id7K_nJtnPFCb = new SMethodBuilder<Integer>(new SJavaCompoundTypeImpl(Integer.TYPE)).name("semitonesForDegree").modifiers(1, AccessPrivileges.PRIVATE).concept(CONCEPT).baseMethodId(8945660651264981515L).languageId(0x852f1bd942b093e8L, 0x87d1018d30c44219L).build2(SMethodBuilder.createJavaParameter(Integer.TYPE, ""));

  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList(withTonic_id7K_nJtnRyj0, degree_id7K_nJtnPFxg, nextSemitone_id7K_nJtnQ1dq, semitonesForDegree_id7K_nJtnPFCb);

  private static void ___init___(@NotNull SNode __thisNode__) {
    SPropertyOperations.assignEnum(__thisNode__, PROPS.mode$tsbR, SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757dc4b0fL, "MusicTheoryLang.structure.MuscalMode"), 0x7c255ef757dc4b10L, "Ionian"));
  }

  /*package*/ static SNode withTonic_id7K_nJtnRyj0(@NotNull SAbstractConcept __thisConcept__, SEnumerationLiteral note) {
    SNode scale = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757d6b824L, "MusicTheoryLang.structure.MajorScale"));
    SPropertyOperations.assignEnum(scale, PROPS.tonic$HOv_, note);
    return scale;
  }
  /*package*/ static SEnumerationLiteral degree_id7K_nJtnPFxg(@NotNull SNode __thisNode__, int degree) {
    SEnumerationLiteral currNote = SPropertyOperations.getEnum(__thisNode__, PROPS.tonic$HOv_);
    int startAtDegree = 1;
    switch (enumSwitchIndex.indexNullable(SPropertyOperations.getEnum(__thisNode__, PROPS.mode$tsbR))) {
      case 0:
        startAtDegree = 1;
        break;
      case 1:
        startAtDegree = 2;
        break;
      case 2:
        startAtDegree = 3;
        break;
      case 3:
        startAtDegree = 4;
        break;
      case 4:
        startAtDegree = 5;
        break;
      case 5:
        startAtDegree = 6;
        break;
      case 6:
        startAtDegree = 7;
        break;
    }

    int semitones = ((int) MajorScale__BehaviorDescriptor.semitonesForDegree_id7K_nJtnPFCb.invokeSpecial(__thisNode__.getConcept(), ((int) startAtDegree))) + ((int) MajorScale__BehaviorDescriptor.semitonesForDegree_id7K_nJtnPFCb.invokeSpecial(__thisNode__.getConcept(), ((int) degree)));
    for (int i = 0; i < semitones; i += 1) {
      currNote = MajorScale__BehaviorDescriptor.nextSemitone_id7K_nJtnQ1dq.invoke(__thisNode__.getConcept(), currNote);
    }

    return currNote;
  }
  /*package*/ static SEnumerationLiteral nextSemitone_id7K_nJtnQ1dq(@NotNull SAbstractConcept __thisConcept__, SEnumerationLiteral note) {
    switch (enumSwitchIndex1.indexNullable(note)) {
      case 0:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92c33L, "CSharp");
      case 1:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92c83L, "D");
      case 2:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92c83L, "D");
      case 3:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92c9dL, "DSharp");
      case 4:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92cc9L, "E");
      case 5:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92cc9L, "E");
      case 6:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92ce6L, "F");
      case 7:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92cefL, "FSharp");
      case 8:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92d4dL, "G");
      case 9:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92d4dL, "G");
      case 10:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92d64L, "GSharp");
      case 11:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92da9L, "A");
      case 12:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92da9L, "A");
      case 13:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92dcdL, "ASharp");
      case 14:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92e17L, "B");
      case 15:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92e17L, "B");
      case 16:
        return SEnumOperations.getMember(MetaAdapterFactory.getEnumeration(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, "MusicTheoryLang.structure.NoteName"), 0x7c255ef757c92c0eL, "C");
      default:
        return null;
    }
  }
  /*package*/ static int semitonesForDegree_id7K_nJtnPFCb(@NotNull SAbstractConcept __thisConcept__, int degrees) {
    int semitones = 0;

    for (int i = 1; i < degrees; i += 1) {
      int step = i % 8;
      if (step == 3 || step == 7) {
        semitones += 1;
      } else {
        semitones += 2;
      }
    }

    return semitones;
  }

  /*package*/ MajorScale__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 1:
        return (T) ((SEnumerationLiteral) degree_id7K_nJtnPFxg(node, ((int) (Integer) parameters[0])));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      case 0:
        return (T) ((SNode) withTonic_id7K_nJtnRyj0(concept, (SEnumerationLiteral) parameters[0]));
      case 2:
        return (T) ((SEnumerationLiteral) nextSemitone_id7K_nJtnQ1dq(concept, (SEnumerationLiteral) parameters[0]));
      case 3:
        return (T) ((Integer) semitonesForDegree_id7K_nJtnPFCb(concept, ((int) (Integer) parameters[0])));
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }
  private static final EnumerationLiteralsIndex enumSwitchIndex = EnumerationLiteralsIndex.build(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757dc4b0fL, 0x7c255ef757dc4b10L, 0x7c255ef757dc4b12L, 0x7c255ef757dc4b16L, 0x7c255ef757dc4b1dL, 0x7c255ef757dc4b23L, 0x7c255ef757dc4b2aL, 0x7c255ef757dc4b32L);
  private static final EnumerationLiteralsIndex enumSwitchIndex1 = EnumerationLiteralsIndex.build(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757c92c0dL, 0x7c255ef757c92c0eL, 0x7c255ef757c92c33L, 0x7c255ef757c92c55L, 0x7c255ef757c92c83L, 0x7c255ef757c92c9dL, 0x7c255ef757c92cc2L, 0x7c255ef757c92cc9L, 0x7c255ef757c92ce6L, 0x7c255ef757c92cefL, 0x7c255ef757c92d23L, 0x7c255ef757c92d4dL, 0x7c255ef757c92d64L, 0x7c255ef757c92d90L, 0x7c255ef757c92da9L, 0x7c255ef757c92dcdL, 0x7c255ef757c92dfcL, 0x7c255ef757c92e17L);

  private static final class PROPS {
    /*package*/ static final SProperty mode$tsbR = MetaAdapterFactory.getProperty(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757d6b824L, 0x7c255ef757dc4b3cL, "mode");
    /*package*/ static final SProperty tonic$HOv_ = MetaAdapterFactory.getProperty(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757d6b824L, 0x7c255ef757dc8599L, "tonic");
  }
}
