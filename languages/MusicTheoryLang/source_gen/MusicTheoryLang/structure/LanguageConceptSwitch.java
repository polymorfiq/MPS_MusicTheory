package MusicTheoryLang.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Chord = 0;
  public static final int EmptySpace = 1;
  public static final int Harmony = 2;
  public static final int KeySignature = 3;
  public static final int MajorChord = 4;
  public static final int MajorScale = 5;
  public static final int MusicalElement = 6;
  public static final int Note = 7;
  public static final int Pitch = 8;
  public static final int PitchCollection = 9;
  public static final int Scale = 10;
  public static final int Song = 11;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x87d1018d30c44219L, 0x852f1bd942b093e8L);
    builder.put(0x7c255ef757f95629L, Chord);
    builder.put(0x7c255ef757cdb961L, EmptySpace);
    builder.put(0x7c255ef757d2d2fbL, Harmony);
    builder.put(0x7c255ef757d6b80dL, KeySignature);
    builder.put(0x7c255ef757d2d3adL, MajorChord);
    builder.put(0x7c255ef757d6b824L, MajorScale);
    builder.put(0x7c255ef757cdb8c1L, MusicalElement);
    builder.put(0x7c255ef757c9302aL, Note);
    builder.put(0x7c255ef757c92fa6L, Pitch);
    builder.put(0x7c255ef757d35145L, PitchCollection);
    builder.put(0x7c255ef757d6b83cL, Scale);
    builder.put(0x7c255ef757cdb7e3L, Song);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
