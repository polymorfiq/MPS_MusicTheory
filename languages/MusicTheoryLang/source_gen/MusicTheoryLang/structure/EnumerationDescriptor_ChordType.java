package MusicTheoryLang.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.EnumerationDescriptorBase;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.lang.smodel.EnumerationLiteralsIndex;
import java.util.List;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;

public class EnumerationDescriptor_ChordType extends EnumerationDescriptorBase {

  public EnumerationDescriptor_ChordType() {
    super(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757e04526L, "ChordType", "r:e8bf4a00-4d2c-41d0-918b-66974261049f(MusicTheoryLang.structure)/8945660651265606950");
  }

  private final EnumerationDescriptor.MemberDescriptor myMember_Major_0 = new EnumerationDescriptor.MemberDescriptor("Major", "Major", 0x7c255ef757e04527L, "r:e8bf4a00-4d2c-41d0-918b-66974261049f(MusicTheoryLang.structure)/8945660651265606951");
  private final EnumerationDescriptor.MemberDescriptor myMember_Minor_0 = new EnumerationDescriptor.MemberDescriptor("Minor", "Minor", 0x7c255ef757e04529L, "r:e8bf4a00-4d2c-41d0-918b-66974261049f(MusicTheoryLang.structure)/8945660651265606953");
  private final EnumerationDescriptor.MemberDescriptor myMember_Diminished_0 = new EnumerationDescriptor.MemberDescriptor("Diminished", "Diminished", 0x7c255ef757e0452cL, "r:e8bf4a00-4d2c-41d0-918b-66974261049f(MusicTheoryLang.structure)/8945660651265606956");
  private final EnumerationDescriptor.MemberDescriptor myMember_Augmented_0 = new EnumerationDescriptor.MemberDescriptor("Augmented", "Augmented", 0x7c255ef757e04531L, "r:e8bf4a00-4d2c-41d0-918b-66974261049f(MusicTheoryLang.structure)/8945660651265606961");

  private final EnumerationLiteralsIndex myIndex = EnumerationLiteralsIndex.build(0x87d1018d30c44219L, 0x852f1bd942b093e8L, 0x7c255ef757e04526L, 0x7c255ef757e04527L, 0x7c255ef757e04529L, 0x7c255ef757e0452cL, 0x7c255ef757e04531L);
  private final List<EnumerationDescriptor.MemberDescriptor> myMembers = new EnumerationDescriptorBase.MembersList(myIndex, myMember_Major_0, myMember_Minor_0, myMember_Diminished_0, myMember_Augmented_0);

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getDefault() {
    return null;
  }

  @NotNull
  @Override
  public List<EnumerationDescriptor.MemberDescriptor> getMembers() {
    return myMembers;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(@Nullable String memberName) {
    if (memberName == null) {
      return null;
    }
    switch (memberName) {
      case "Major":
        return myMember_Major_0;
      case "Minor":
        return myMember_Minor_0;
      case "Diminished":
        return myMember_Diminished_0;
      case "Augmented":
        return myMember_Augmented_0;
    }
    return null;
  }

  @Nullable
  @Override
  public EnumerationDescriptor.MemberDescriptor getMember(long idValue) {
    int index = myIndex.index(idValue);
    if (index == -1) {
      return null;
    }
    return myMembers.get(index);
  }
}
